apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "gcloud-cron.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "gcloud-cron.name" . }}
    helm.sh/chart: {{ include "gcloud-cron.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- with .Values.labels.cronJob }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- if .Values.annotations.cronJob }}
  annotations:
    {{- with .Values.annotations.cronJob }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  schedule: {{ .Values.schedule }}
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "gcloud-cron.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.labels.cronJob }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config_map.yaml") . | sha256sum }}
        {{- with .Values.annotations.cronJob }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      completions: 1
      parallelism: 1
      {{- if .Values.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ .Values.ttlSecondsAfterFinished }}
      {{- end }}
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "gcloud-cron.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            {{- with .Values.labels.pods }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
          annotations:
            {{- with .Values.annotations.pods }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
        spec:
          serviceAccountName: {{ .Values.serviceAccount }}
          automountServiceAccountToken: true
          restartPolicy: OnFailure
          initContainers:
            - name: vault-agent
              image: "{{ .Values.vault.image }}:{{ .Values.vault.tag }}"
              imagePullPolicy: {{ .Values.vault.pullPolicy }}
              resources:
                {{- toYaml .Values.resources.vaultAgent | nindent 16 }}
              volumeMounts:
                - name: config
                  mountPath: /config
                  readOnly: true
                - name: vault-token
                  mountPath: /vault
              env:
                - name: VAULT_ADDR
                  value: {{ include "vaultAddress" . | quote }}
                - name: VAULT_CAPATH
                  value: /config/vault_ca.pem
                - name: VAULT_LOG_LEVEL
                  value: trace
                {{- if .Values.vault.env }}
                {{- toYaml .Values.vault.env | nindent 16 }}
                {{- end }}
              command:
                - /bin/vault
              args:
                - agent
                - -config=/config/vault_agent.hcl
              resources:
                {{- toYaml .Values.resources.consulTemplate | nindent 16 }}
            - name: consul-template
              image: "{{ .Values.consulTemplate.image }}:{{ .Values.consulTemplate.tag }}"
              imagePullPolicy: {{ .Values.consulTemplate.pullPolicy }}
              resources:
                {{- toYaml .Values.resources.consulTemplate | nindent 16 }}
              volumeMounts:
                - name: config
                  mountPath: /config
                  readOnly: true
                - name: vault-token
                  mountPath: /vault
                  readOnly: true
                - name: gcp-service-account
                  mountPath: /gcp
              env:
                - name: VAULT_ADDR
                  value: {{ include "vaultAddress" . | quote }}
                - name: VAULT_CAPATH
                  value: /config/vault_ca.pem
                {{- if .Values.consulTemplate.env }}
                {{- toYaml .Values.consulTemplate.env | nindent 16 }}
                {{- end }}
              command:
                - "/bin/consul-template"
              args:
                - "-once"
                - "-config=/config/consul_template.hcl"
                - "-log-level=debug"
              resources:
                {{- toYaml .Values.resources.consulTemplate | nindent 16 }}
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.resources.backup | nindent 16 }}
              volumeMounts:
                - name: gcp-service-account
                  mountPath: /gcp
                - name: config
                  mountPath: /config
                  readOnly: true
                - name: additional
                  mountPath: {{ .Values.additionalMountPoint }}
              env:
                - name: GOOGLE_CREDENTIALS
                  value: /gcp/service_account.json
                {{- if .Values.env }}
                {{- toYaml .Values.env | nindent 16 }}
                {{- end }}
              command:
                - /config/entrypoint.sh
          volumes:
            - name: config
              configMap:
                name: {{ include "gcloud-cron.fullname" . }}
                items:
                  - key: vaultAgent
                    path: vault_agent.hcl
                  - key: consulTemplate
                    path: consul_template.hcl
                  - key: vaultCA
                    path: vault_ca.pem
                  - key: entrypoint
                    path: entrypoint.sh
                    mode: 0777
            - name: vault-token
              emptyDir: {}
            - name: gcp-service-account
              emptyDir: {}
            - name: additional
              configMap:
                name: {{ include "gcloud-cron.name" . }}-additional
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
            affinity:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
            tolerations:
              {{- toYaml . | nindent 12 }}
          {{- end }}
